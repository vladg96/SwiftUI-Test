import SwiftUI

// Generated by Supernova - do not modify manually
public extension Color {
    
    static let Token = Color.TokenColor()
    
    struct TokenColor {
        public let newStyle = Color(.sRGB, red: 14/255, green: 42/255, blue: 33/255, opacity: 1) 
        public let darkBlue = Color(.sRGB, red: 157/255, green: 29/255, blue: 121/255, opacity: 1) 

        // Palette
        public let paletteTestToken = Color(.sRGB, red: 4/255, green: 4/255, blue: 4/255, opacity: 1) 

        // Green
        public let paletteGreenGreen1000 = Color(.sRGB, red: 28/255, green: 65/255, blue: 48/255, opacity: 1) 
        public let paletteGreenGreen900 = Color(.sRGB, red: 45/255, green: 105/255, blue: 68/255, opacity: 1) 
        public let paletteGreenGreen800 = Color(.sRGB, red: 60/255, green: 136/255, blue: 77/255, opacity: 1) 
        public let paletteGreenGreen700 = Color(.sRGB, red: 76/255, green: 164/255, blue: 90/255, opacity: 1) 
        public let paletteGreenGreen600 = Color(.sRGB, red: 90/255, green: 178/255, blue: 97/255, opacity: 1) 
        public let paletteGreenGreen500 = Color(.sRGB, red: 120/255, green: 199/255, blue: 103/255, opacity: 1) 
        public let paletteGreenGreen400 = Color(.sRGB, red: 143/255, green: 218/255, blue: 117/255, opacity: 1) 
        public let paletteGreenGreen300 = Color(.sRGB, red: 169/255, green: 226/255, blue: 151/255, opacity: 1) 
        public let paletteGreenGreen200 = Color(.sRGB, red: 204/255, green: 240/255, blue: 194/255, opacity: 1) 
        public let paletteGreenGreen100 = Color(.sRGB, red: 221/255, green: 243/255, blue: 217/255, opacity: 1) 
        public let paletteGreenGreen0 = Color(.sRGB, red: 238/255, green: 249/255, blue: 236/255, opacity: 1) 
        public let paletteGreenGreen1100 = Color(.sRGB, red: 14/255, green: 42/255, blue: 33/255, opacity: 1) 

        // Blue
        public let paletteBlueBlue1100 = Color(.sRGB, red: 8/255, green: 32/255, blue: 54/255, opacity: 1) 
        public let paletteBlueBlue1000 = Color(.sRGB, red: 24/255, green: 57/255, blue: 93/255, opacity: 1) 
        public let paletteBlueBlue900 = Color(.sRGB, red: 36/255, green: 86/255, blue: 133/255, opacity: 1) 

        /// This is our new main color :)
        public let paletteBlueBlue800 = Color(.sRGB, red: 48/255, green: 108/255, blue: 165/255, opacity: 1) 
        public let paletteBlueBlue700 = Color(.sRGB, red: 58/255, green: 121/255, blue: 189/255, opacity: 1) 
        public let paletteBlueBlue600 = Color(.sRGB, red: 69/255, green: 135/255, blue: 205/255, opacity: 1) 
        public let paletteBlueBlue500 = Color(.sRGB, red: 81/255, green: 150/255, blue: 221/255, opacity: 1) 
        public let paletteBlueBlue400 = Color(.sRGB, red: 106/255, green: 172/255, blue: 239/255, opacity: 1) 
        public let paletteBlueBlue300 = Color(.sRGB, red: 170/255, green: 210/255, blue: 244/255, opacity: 1) 
        public let paletteBlueBlue200 = Color(.sRGB, red: 205/255, green: 227/255, blue: 247/255, opacity: 1) 
        public let paletteBlueBlue100 = Color(.sRGB, red: 224/255, green: 241/255, blue: 254/255, opacity: 1) 
        public let paletteBlueBlue0 = Color(.sRGB, red: 236/255, green: 248/255, blue: 254/255, opacity: 1) 

        // Aqua

        /// Darkest aqua there is
        public let paletteAquaAqua1100 = Color(.sRGB, red: 11/255, green: 39/255, blue: 55/255, opacity: 1) 

        /// Slightly less aquatic, still deep as an ocean
        public let paletteAquaAqua1000 = Color(.sRGB, red: 25/255, green: 60/255, blue: 77/255, opacity: 1) 
        public let paletteAquaAqua900 = Color(.sRGB, red: 38/255, green: 93/255, blue: 113/255, opacity: 1) 
        public let paletteAquaAqua800 = Color(.sRGB, red: 49/255, green: 108/255, blue: 130/255, opacity: 1) 
        public let paletteAquaAqua700 = Color(.sRGB, red: 58/255, green: 131/255, blue: 150/255, opacity: 1) 
        public let paletteAquaAqua600 = Color(.sRGB, red: 66/255, green: 149/255, blue: 171/255, opacity: 1) 
        public let paletteAquaAqua500 = Color(.sRGB, red: 84/255, green: 181/255, blue: 203/255, opacity: 1) 
        public let paletteAquaAqua400 = Color(.sRGB, red: 106/255, green: 211/255, blue: 223/255, opacity: 1) 
        public let paletteAquaAqua300 = Color(.sRGB, red: 145/255, green: 226/255, blue: 225/255, opacity: 1) 
        public let paletteAquaAqua200 = Color(.sRGB, red: 181/255, green: 240/255, blue: 241/255, opacity: 1) 
        public let paletteAquaAqua100 = Color(.sRGB, red: 208/255, green: 247/255, blue: 248/255, opacity: 1) 
        public let paletteAquaAqua0 = Color(.sRGB, red: 224/255, green: 251/255, blue: 251/255, opacity: 1) 

        // Purple
        public let palettePurplePurple1100 = Color(.sRGB, red: 29/255, green: 30/255, blue: 54/255, opacity: 1) 
        public let palettePurplePurple1000 = Color(.sRGB, red: 43/255, green: 38/255, blue: 103/255, opacity: 1) 
        public let palettePurplePurple900 = Color(.sRGB, red: 69/255, green: 62/255, blue: 150/255, opacity: 1) 
        public let palettePurplePurple800 = Color(.sRGB, red: 90/255, green: 82/255, blue: 180/255, opacity: 1) 
        public let palettePurplePurple700 = Color(.sRGB, red: 107/255, green: 98/255, blue: 204/255, opacity: 1) 
        public let palettePurplePurple600 = Color(.sRGB, red: 125/255, green: 115/255, blue: 226/255, opacity: 1) 
        public let palettePurplePurple500 = Color(.sRGB, red: 141/255, green: 132/255, blue: 237/255, opacity: 1) 
        public let palettePurplePurple400 = Color(.sRGB, red: 158/255, green: 149/255, blue: 236/255, opacity: 1) 
        public let palettePurplePurple300 = Color(.sRGB, red: 192/255, green: 194/255, blue: 243/255, opacity: 1) 
        public let palettePurplePurple200 = Color(.sRGB, red: 216/255, green: 216/255, blue: 246/255, opacity: 1) 
        public let palettePurplePurple100 = Color(.sRGB, red: 234/255, green: 234/255, blue: 248/255, opacity: 1) 
        public let palettePurplePurple0 = Color(.sRGB, red: 242/255, green: 242/255, blue: 248/255, opacity: 1) 

        // Neutral
        public let paletteNeutralNeutral1100 = Color(.sRGB, red: 4/255, green: 4/255, blue: 4/255, opacity: 1) 
        public let paletteNeutralNeutral1000 = Color(.sRGB, red: 24/255, green: 32/255, blue: 32/255, opacity: 1) 
        public let paletteNeutralNeutral900 = Color(.sRGB, red: 41/255, green: 51/255, blue: 51/255, opacity: 1) 
        public let paletteNeutralNeutral800 = Color(.sRGB, red: 56/255, green: 65/255, blue: 65/255, opacity: 1) 
        public let paletteNeutralNeutral700 = Color(.sRGB, red: 84/255, green: 94/255, blue: 95/255, opacity: 1) 
        public let paletteNeutralNeutral600 = Color(.sRGB, red: 112/255, green: 121/255, blue: 122/255, opacity: 1) 
        public let paletteNeutralNeutral500 = Color(.sRGB, red: 147/255, green: 154/255, blue: 155/255, opacity: 1) 
        public let paletteNeutralNeutral400 = Color(.sRGB, red: 177/255, green: 182/255, blue: 183/255, opacity: 1) 
        public let paletteNeutralNeutral300 = Color(.sRGB, red: 201/255, green: 204/255, blue: 204/255, opacity: 1) 
        public let paletteNeutralNeutral200 = Color(.sRGB, red: 223/255, green: 225/255, blue: 225/255, opacity: 1) 
        public let paletteNeutralNeutral100 = Color(.sRGB, red: 243/255, green: 244/255, blue: 244/255, opacity: 1) 
        public let paletteNeutralNeutral0 = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 

        // Teal
        public let paletteTealTeal1100 = Color(.sRGB, red: 11/255, green: 36/255, blue: 39/255, opacity: 1) 
        public let paletteTealTeal1000 = Color(.sRGB, red: 27/255, green: 62/255, blue: 62/255, opacity: 1) 
        public let paletteTealTeal900 = Color(.sRGB, red: 42/255, green: 100/255, blue: 97/255, opacity: 1) 
        public let paletteTealTeal800 = Color(.sRGB, red: 53/255, green: 122/255, blue: 123/255, opacity: 1) 
        public let paletteTealTeal700 = Color(.sRGB, red: 66/255, green: 148/255, blue: 142/255, opacity: 1) 
        public let paletteTealTeal600 = Color(.sRGB, red: 74/255, green: 166/255, blue: 156/255, opacity: 1) 
        public let paletteTealTeal500 = Color(.sRGB, red: 88/255, green: 193/255, blue: 178/255, opacity: 1) 
        public let paletteTealTeal400 = Color(.sRGB, red: 106/255, green: 221/255, blue: 198/255, opacity: 1) 
        public let paletteTealTeal300 = Color(.sRGB, red: 151/255, green: 231/255, blue: 213/255, opacity: 1) 
        public let paletteTealTeal200 = Color(.sRGB, red: 192/255, green: 240/255, blue: 230/255, opacity: 1) 
        public let paletteTealTeal100 = Color(.sRGB, red: 213/255, green: 246/255, blue: 239/255, opacity: 1) 
        public let paletteTealTeal0 = Color(.sRGB, red: 233/255, green: 248/255, blue: 245/255, opacity: 1) 

        // Pink
        public let palettePinkPink1100 = Color(.sRGB, red: 40/255, green: 24/255, blue: 33/255, opacity: 1) 
        public let palettePinkPink1000 = Color(.sRGB, red: 79/255, green: 25/255, blue: 48/255, opacity: 1) 
        public let palettePinkPink900 = Color(.sRGB, red: 135/255, green: 38/255, blue: 71/255, opacity: 1) 
        public let palettePinkPink800 = Color(.sRGB, red: 164/255, green: 59/255, blue: 91/255, opacity: 1) 
        public let palettePinkPink700 = Color(.sRGB, red: 190/255, green: 68/255, blue: 102/255, opacity: 1) 
        public let palettePinkPink600 = Color(.sRGB, red: 207/255, green: 81/255, blue: 124/255, opacity: 1) 
        public let palettePinkPink500 = Color(.sRGB, red: 222/255, green: 99/255, blue: 139/255, opacity: 1) 
        public let palettePinkPink400 = Color(.sRGB, red: 238/255, green: 127/255, blue: 173/255, opacity: 1) 
        public let palettePinkPink300 = Color(.sRGB, red: 241/255, green: 155/255, blue: 192/255, opacity: 1) 
        public let palettePinkPink200 = Color(.sRGB, red: 244/255, green: 184/255, blue: 212/255, opacity: 1) 
        public let palettePinkPink100 = Color(.sRGB, red: 247/255, green: 220/255, blue: 234/255, opacity: 1) 
        public let palettePinkPink0 = Color(.sRGB, red: 251/255, green: 234/255, blue: 242/255, opacity: 1) 

        // Red
        public let paletteRedRed1100 = Color(.sRGB, red: 40/255, green: 18/255, blue: 18/255, opacity: 1) 
        public let paletteRedRed1000 = Color(.sRGB, red: 100/255, green: 28/255, blue: 24/255, opacity: 1) 
        public let paletteRedRed900 = Color(.sRGB, red: 141/255, green: 45/255, blue: 40/255, opacity: 1) 
        public let paletteRedRed800 = Color(.sRGB, red: 182/255, green: 64/255, blue: 59/255, opacity: 1) 
        public let paletteRedRed700 = Color(.sRGB, red: 202/255, green: 75/255, blue: 69/255, opacity: 1) 
        public let paletteRedRed600 = Color(.sRGB, red: 220/255, green: 88/255, blue: 74/255, opacity: 1) 
        public let paletteRedRed500 = Color(.sRGB, red: 229/255, green: 106/255, blue: 91/255, opacity: 1) 
        public let paletteRedRed400 = Color(.sRGB, red: 239/255, green: 134/255, blue: 116/255, opacity: 1) 
        public let paletteRedRed300 = Color(.sRGB, red: 241/255, green: 161/255, blue: 147/255, opacity: 1) 
        public let paletteRedRed200 = Color(.sRGB, red: 244/255, green: 187/255, blue: 179/255, opacity: 1) 
        public let paletteRedRed100 = Color(.sRGB, red: 248/255, green: 215/255, blue: 211/255, opacity: 1) 
        public let paletteRedRed0 = Color(.sRGB, red: 251/255, green: 235/255, blue: 233/255, opacity: 1) 

        // Orange
        public let paletteOrangeOrange1100 = Color(.sRGB, red: 42/255, green: 20/255, blue: 15/255, opacity: 1) 
        public let paletteOrangeOrange1000 = Color(.sRGB, red: 88/255, green: 29/255, blue: 9/255, opacity: 1) 
        public let paletteOrangeOrange900 = Color(.sRGB, red: 138/255, green: 52/255, blue: 26/255, opacity: 1) 
        public let paletteOrangeOrange800 = Color(.sRGB, red: 191/255, green: 92/255, blue: 41/255, opacity: 1) 
        public let paletteOrangeOrange700 = Color(.sRGB, red: 222/255, green: 118/255, blue: 58/255, opacity: 1) 
        public let paletteOrangeOrange600 = Color(.sRGB, red: 230/255, green: 130/255, blue: 70/255, opacity: 1) 
        public let paletteOrangeOrange500 = Color(.sRGB, red: 238/255, green: 142/255, blue: 83/255, opacity: 1) 
        public let paletteOrangeOrange400 = Color(.sRGB, red: 242/255, green: 160/255, blue: 105/255, opacity: 1) 

        /// This is our main color. And this description will show inside the documentation
        public let paletteOrangeOrange300 = Color(.sRGB, red: 244/255, green: 179/255, blue: 136/255, opacity: 1) 
        public let paletteOrangeOrange200 = Color(.sRGB, red: 246/255, green: 199/255, blue: 169/255, opacity: 1) 
        public let paletteOrangeOrange100 = Color(.sRGB, red: 247/255, green: 221/255, blue: 206/255, opacity: 1) 
        public let paletteOrangeOrange0 = Color(.sRGB, red: 252/255, green: 238/255, blue: 228/255, opacity: 1) 

        // Yellow
        public let paletteYellowYellow1100 = Color(.sRGB, red: 42/255, green: 27/255, blue: 8/255, opacity: 1) 
        public let paletteYellowYellow1000 = Color(.sRGB, red: 78/255, green: 44/255, blue: 11/255, opacity: 1) 
        public let paletteYellowYellow900 = Color(.sRGB, red: 139/255, green: 79/255, blue: 31/255, opacity: 1) 
        public let paletteYellowYellow800 = Color(.sRGB, red: 176/255, green: 119/255, blue: 42/255, opacity: 1) 
        public let paletteYellowYellow700 = Color(.sRGB, red: 212/255, green: 155/255, blue: 53/255, opacity: 1) 
        public let paletteYellowYellow600 = Color(.sRGB, red: 246/255, green: 190/255, blue: 65/255, opacity: 1) 
        public let paletteYellowYellow500 = Color(.sRGB, red: 248/255, green: 206/255, blue: 76/255, opacity: 1) 
        public let paletteYellowYellow400 = Color(.sRGB, red: 250/255, green: 217/255, blue: 97/255, opacity: 1) 
        public let paletteYellowYellow300 = Color(.sRGB, red: 251/255, green: 225/255, blue: 127/255, opacity: 1) 
        public let paletteYellowYellow200 = Color(.sRGB, red: 251/255, green: 233/255, blue: 164/255, opacity: 1) 
        public let paletteYellowYellow100 = Color(.sRGB, red: 251/255, green: 238/255, blue: 209/255, opacity: 1) 
        public let paletteYellowYellow0 = Color(.sRGB, red: 254/255, green: 248/255, blue: 228/255, opacity: 1) 

        // Magenta
        public let paletteMagentaMagenta1100 = Color(.sRGB, red: 39/255, green: 26/255, blue: 44/255, opacity: 1) 
        public let paletteMagentaMagenta1000 = Color(.sRGB, red: 63/255, green: 26/255, blue: 78/255, opacity: 1) 
        public let paletteMagentaMagenta900 = Color(.sRGB, red: 100/255, green: 42/255, blue: 115/255, opacity: 1) 
        public let paletteMagentaMagenta800 = Color(.sRGB, red: 133/255, green: 64/255, blue: 145/255, opacity: 1) 
        public let paletteMagentaMagenta700 = Color(.sRGB, red: 160/255, green: 77/255, blue: 163/255, opacity: 1) 
        public let paletteMagentaMagenta600 = Color(.sRGB, red: 182/255, green: 89/255, blue: 180/255, opacity: 1) 
        public let paletteMagentaMagenta500 = Color(.sRGB, red: 204/255, green: 107/255, blue: 213/255, opacity: 1) 
        public let paletteMagentaMagenta400 = Color(.sRGB, red: 227/255, green: 138/255, blue: 239/255, opacity: 1) 
        public let paletteMagentaMagenta300 = Color(.sRGB, red: 227/255, green: 177/255, blue: 238/255, opacity: 1) 
        public let paletteMagentaMagenta200 = Color(.sRGB, red: 236/255, green: 199/255, blue: 244/255, opacity: 1) 
        public let paletteMagentaMagenta100 = Color(.sRGB, red: 245/255, green: 228/255, blue: 250/255, opacity: 1) 
        public let paletteMagentaMagenta0 = Color(.sRGB, red: 252/255, green: 240/255, blue: 254/255, opacity: 1) 

        // Semantic

        // Primary
        public let semanticPrimaryPrimaryActiveBackground = Color(.sRGB, red: 69/255, green: 62/255, blue: 150/255, opacity: 1) 
        public let semanticPrimaryPrimaryHoverBackground = Color(.sRGB, red: 90/255, green: 82/255, blue: 180/255, opacity: 1) 
        public let semanticPrimaryPrimaryHoverColor = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let semanticPrimaryPrimaryBackground = Color(.sRGB, red: 107/255, green: 98/255, blue: 204/255, opacity: 1) 
        public let semanticPrimaryPrimaryColor = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let semanticPrimaryPrimaryInnactiveBackground = Color(.sRGB, red: 216/255, green: 216/255, blue: 246/255, opacity: 1) 
        public let semanticPrimaryPrimaryBorder = Color(.sRGB, red: 107/255, green: 98/255, blue: 204/255, opacity: 1) 
        public let semanticPrimaryHoverInnactiveBackground = Color(.sRGB, red: 192/255, green: 194/255, blue: 243/255, opacity: 1) 

        // Text
        public let semanticTextTextInverse = Color(.sRGB, red: 255/255, green: 255/255, blue: 255/255, opacity: 1) 
        public let semanticTextTextSubtext = Color(.sRGB, red: 84/255, green: 94/255, blue: 95/255, opacity: 1) 
        public let semanticTextTextHeadline = Color(.sRGB, red: 41/255, green: 51/255, blue: 51/255, opacity: 1) 
        public let semanticTextTextBody = Color(.sRGB, red: 56/255, green: 65/255, blue: 65/255, opacity: 1) 

        // Error
        public let semanticErrorErrorColor = Color(.sRGB, red: 182/255, green: 64/255, blue: 59/255, opacity: 1) 
        public let semanticErrorErrorIcon = Color(.sRGB, red: 182/255, green: 64/255, blue: 59/255, opacity: 1) 
        public let semanticErrorErrorBorder = Color(.sRGB, red: 239/255, green: 134/255, blue: 116/255, opacity: 1) 
        public let semanticErrorErrorBackground = Color(.sRGB, red: 248/255, green: 215/255, blue: 211/255, opacity: 1) 

        // Warning
        public let semanticWarningWarningColor = Color(.sRGB, red: 139/255, green: 79/255, blue: 31/255, opacity: 1) 
        public let semanticWarningWarningIcon = Color(.sRGB, red: 186/255, green: 117/255, blue: 6/255, opacity: 1) 
        public let semanticWarningWarningBorder = Color(.sRGB, red: 250/255, green: 217/255, blue: 97/255, opacity: 1) 
        public let semanticWarningWarningBackground = Color(.sRGB, red: 251/255, green: 238/255, blue: 209/255, opacity: 1) 

        // Success
        public let semanticSuccessSuccessColor = Color(.sRGB, red: 45/255, green: 105/255, blue: 68/255, opacity: 1) 
        public let semanticSuccessSuccessIcon = Color(.sRGB, red: 60/255, green: 136/255, blue: 77/255, opacity: 1) 
        public let semanticSuccessSuccessBorder = Color(.sRGB, red: 143/255, green: 218/255, blue: 117/255, opacity: 1) 
        public let semanticSuccessSuccessBackground = Color(.sRGB, red: 221/255, green: 243/255, blue: 217/255, opacity: 1) 

        // Info
        public let semanticInfoInfoColor = Color(.sRGB, red: 58/255, green: 121/255, blue: 189/255, opacity: 1) 
        public let semanticInfoInfoIcon = Color(.sRGB, red: 48/255, green: 108/255, blue: 165/255, opacity: 1) 
        public let semanticInfoInfoBorder = Color(.sRGB, red: 106/255, green: 172/255, blue: 239/255, opacity: 1) 
        public let semanticInfoInfoBackground = Color(.sRGB, red: 224/255, green: 241/255, blue: 254/255, opacity: 1) 

        // Opportunity
        public let semanticOpportunityOpportunityColor = Color(.sRGB, red: 53/255, green: 122/255, blue: 123/255, opacity: 1) 
        public let semanticOpportunityOpportunityIcon = Color(.sRGB, red: 53/255, green: 122/255, blue: 123/255, opacity: 1) 
        public let semanticOpportunityOpportunityBorder = Color(.sRGB, red: 106/255, green: 221/255, blue: 198/255, opacity: 1) 
        public let semanticOpportunityOpportunityBackground = Color(.sRGB, red: 213/255, green: 246/255, blue: 239/255, opacity: 1) 

        // Sale
        public let semanticSaleSale70Background = Color(.sRGB, red: 172/255, green: 125/255, blue: 19/255, opacity: 1) 
        public let semanticSaleSale50Background = Color(.sRGB, red: 181/255, green: 29/255, blue: 78/255, opacity: 1) 
        public let semanticSaleSale30Background = Color(.sRGB, red: 88/255, green: 105/255, blue: 193/255, opacity: 1) 
        public let semanticSaleSaleColor = Color(.sRGB, red: 183/255, green: 183/255, blue: 183/255, opacity: 1) 
    }
}